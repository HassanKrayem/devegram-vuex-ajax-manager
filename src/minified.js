import axios from"axios";const ajaxManager={namespaced:!0,state:{token:null,services:{github:{url:"https://github.com",port:"",apiVer:"",token:""}},defaultHeaders:{accept:"application/json","content-type":"application/json"},loadingRequests:0,debug:!1,errorHandler:null,successHandler:null,finallyHandler:null},mutations:{SET_SERVICE(e,r){r.constructor!==Array&&(r=[r]),r.forEach(r=>{let n=r.config;e.services[r.name]={...n},e.services[r.name].path=n.url+(n.port?":"+n.port:"")+(n.apiVer?"/"+n.apiVer:"")})},SET_ERROR_HANDLER(e,r){e.errorHandler=r},SET_SUCCESS_HANDLER(e,r){e.successHandler=r},SET_FINALLY_HANDLER(e,r){e.finallyHandler=r},SET_DEBUG(e,r){e.debug=r},SET_TOKEN(e,r){e.token=r.token},LOADER_INCREMENT(e,r){e.loadingRequests++},LOADER_DECREMENT(e,r){e.loadingRequests--},SET_DEFAULT_HEADERS(e,r){e.defaultHeaders=r}},actions:{setService({commit:e},r){e("SET_SERVICE",r)},setErrorHandler({commit:e},r){e("SET_ERROR_HANDLER",r)},setSuccessHandler({commit:e},r){e("SET_SUCCESS_HANDLER",r)},setFinallyHandler({commit:e},r){e("SET_FINALLY_HANDLER",r)},setDebug({commit:e},r){e("SET_DEBUG",r)},setToken({commit:e},r){e("SET_TOKEN",r)},loaderIncrement({commit:e},r){e("LOADER_INCREMENT",r)},loaderDecrement({commit:e},r){e("LOADER_DECREMENT",r)},setDefaultHeaders({commit:e},r){e("SET_DEFAULT_HEADERS",r)},api({state:e,dispatch:r},n){let o=n.url,t=n.headers||{};const a=e.services[n.service];if(a&&(o=a.path+o),n.hasOwnProperty("noDefaultHeaders")||(t={...t,...e.headers}),!n.hasOwnProperty("noToken")&&!n.hasOwnProperty("noService")){let r=null;r=n.token?n.token:a.token?n.token:e.token,t.Authorization="Bearer "+r}const s={method:n.verb,url:o,data:n.data,headers:t,crossDomain:n.crossDomain};return n.responseType&&(s.responseType=n.responseType),n.hasOwnProperty("noLoadingScreen")||r("loaderIncrement"),new Promise((o,t)=>{axios(s).then(r=>{"function"==typeof e.successHandler&&e.successHandler(r),o(r)},r=>{n.hasOwnProperty("onError")?n.onError(r):("function"==typeof e.errorHandler&&e.errorHandler(r),e.debug&&console.error("AJAX MANAGER API ERROR: ",r),t(r))}).finally(()=>{n.hasOwnProperty("noLoadingScreen")||r("loaderDecrement")})})}}};export default ajaxManager;